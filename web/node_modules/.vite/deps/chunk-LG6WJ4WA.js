import {
  useMergedRefs_default
} from "./chunk-BTL4XNPK.js";
import {
  require_browser
} from "./chunk-DETGG7HT.js";
import {
  require_react
} from "./chunk-CBG3MKAY.js";
import {
  __toESM
} from "./chunk-EQCVQC35.js";

// node_modules/@restart/ui/esm/DropdownContext.js
var React = __toESM(require_react());
var DropdownContext = React.createContext(null);
var DropdownContext_default = DropdownContext;

// node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js
var import_invariant = __toESM(require_browser());
var import_react = __toESM(require_react());
function useWrappedRefWithWarning(ref, componentName) {
  if (false) return ref;
  const warningRef = (0, import_react.useCallback)((refValue) => {
    !(refValue == null || !refValue.isReactComponent) ? true ? (0, import_invariant.default)(false, `${componentName} injected a ref to a provided \`as\` component that resolved to a component instance instead of a DOM element. Use \`React.forwardRef\` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element`) : (0, import_invariant.default)(false) : void 0;
  }, [componentName]);
  return useMergedRefs_default(warningRef, ref);
}

export {
  DropdownContext_default,
  useWrappedRefWithWarning
};
//# sourceMappingURL=chunk-LG6WJ4WA.js.map
